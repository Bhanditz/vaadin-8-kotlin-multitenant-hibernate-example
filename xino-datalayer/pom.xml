<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>xino-parent</artifactId>
        <groupId>de.eiswind.xino3</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>xino-datalayer</artifactId>


    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>de.eiswind.xino3</groupId>
            <artifactId>xino-customtypes</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.vaadin.spring.extensions</groupId>
            <artifactId>vaadin-spring-ext-security</artifactId>

        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>com.vaadin</groupId>-->
        <!--<artifactId>vaadin-compatibility-server</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.vaadin</groupId>-->
        <!--<artifactId>vaadin-compatibility-themes</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.vaadin</groupId>-->
        <!--<artifactId>vaadin-compatibility-client</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>com.vaadin</groupId>-->
        <!--<artifactId>vaadin-compatibility-client-compiled</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.driver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-hibernate5</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>net.ttddyy</groupId>
            <artifactId>datasource-proxy</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>5.5.1</version>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <!--<plugin>-->
            <!--<groupId>io.fabric8</groupId>-->
            <!--<artifactId>docker-maven-plugin</artifactId>-->
            <!--<version>0.15.16</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>start</id>-->
            <!--<phase>pre-clean</phase>-->
            <!--<goals>-->

            <!--<goal>build</goal>-->
            <!--<goal>start</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>stop</id>-->
            <!--<phase>prepare-package</phase>-->
            <!--<goals>-->
            <!--<goal>stop</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--<configuration>-->
            <!--<images>-->
            <!--<image>-->
            <!--<name>eiswind/postgresql:9.6</name>-->
            <!--<build>-->
            <!--<dockerFileDir>${project.basedir}/../docker</dockerFileDir>-->
            <!--</build>-->
            <!--<run>-->
            <!--<ports>5433:5432</ports>-->
            <!--<wait>-->
            <!--<time>3000</time>-->
            <!--</wait>-->
            <!--</run>-->

            <!--</image>-->
            <!--</images>-->
            <!--</configuration>-->

            <!--</plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>

                <dependencies>
                    <!-- specify the dependent jdbc driver here -->
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgres.driver.version}</version>
                    </dependency>
                </dependencies>

                <!-- common configuration shared by all executions -->
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql://localhost:5433/xino3</url>
                    <username>xino3</username>
                    <password>xino3</password>
                    <!-- You can comment out username/password configurations and have maven
                        to look them up in your settings.xml using ${settingsKey} -->
                    <!--all executions are ignored if -Dmaven.test.skip=true -->
                    <!-- <skip>${maven.test.skip}</skip> -->
                </configuration>

                <executions>

                    <execution>
                        <id>drop-db-before-test-if-any2</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <!-- need another database to drop the targeted one -->
                            <url>jdbc:postgresql://localhost:5433/xino3</url>
                            <autocommit>true</autocommit>
                            <sqlCommand>
								drop database IF EXISTS xino3_gen_db;
								drop database IF EXISTS xino3_test_db;
							</sqlCommand>
                            <!-- ignore error when database is not avaiable -->
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-db</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>jdbc:postgresql://localhost:5433/xino3</url>
                            <!-- no transaction -->
                            <autocommit>true</autocommit>
                            <sqlCommand>
                                create database xino3_gen_db;
                                create database xino3_test_db;
                            </sqlCommand>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.3.3</version>
                <configuration>
                    <changeLogFile>src/main/resources/changelog/master/changelog-master.xml</changeLogFile>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql://localhost:5433/xino3_gen_db</url>
                    <username>xino3</username>
                    <password>xino3</password>


                    <contexts>maven</contexts>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                    <liquibaseShouldRun>true</liquibaseShouldRun>

                </configuration>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgres.driver.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>

                <!-- Specify the maven code generator plugin -->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgres.driver.version}</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>jdbc:postgresql://localhost:5433/xino3_gen_db</url>
                        <user>xino3</user>
                        <password>xino3</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <name>org.jooq.util.DefaultGenerator</name>
                        <database>


                            <includes>.*</includes>
                            <excludes></excludes>
                            <inputSchema>master</inputSchema>
                            <customTypes>
                                <customType>
                                    <name>de.eiswind.xino.customtypes.PermissionBinding</name>
                                    <type>java.util.List&lt;de.eiswind.xino.customtypes.Permission&gt;</type>
                                    <binding>de.eiswind.xino.customtypes.PermissionBinding</binding>
                                </customType>
                                <customType>
                                    <name>de.eiswind.xino.customtypes.LocalDateTime</name>
                                    <type>java.time.LocalDateTime</type>
                                    <converter>de.eiswind.xino.customtypes.LocalDateTimeConverter</converter>
                                </customType>
                            </customTypes>
                            <forcedTypes>
                                <forcedType>
                                    <name>de.eiswind.xino.customtypes.PermissionBinding</name>
                                    <expression>master\.user_user\.permissions</expression>
                                </forcedType>
                                <forcedType>
                                    <name>de.eiswind.xino.customtypes.LocalDateTime</name>
                                    <expression>master\.user_.*\..*_date</expression>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <generate>
                            <relations>true</relations>
                            <deprecated>false</deprecated>
                            <instanceFields>true</instanceFields>
                            <generatedAnnotation>true</generatedAnnotation>

                            <records>true</records>
                            <pojos>true</pojos>
                            <immutablePojos>false</immutablePojos>
                            <interfaces>true</interfaces>
                            <daos>false</daos>


                            <validationAnnotations>true</validationAnnotations>
                        </generate>
                        <target>
                            <packageName>de.eiswind.xino.datalayer.jooq</packageName>
                            <directory>src/main/generated/java</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>

            <!--<plugin>-->
            <!--<groupId>com.mysema.maven</groupId>-->
            <!--<artifactId>apt-maven-plugin</artifactId>-->
            <!--<version>1.1.3</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>process</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<outputDirectory>src/main/generated/java</outputDirectory>-->
            <!--<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <version>${hibernate.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <failOnError>true</failOnError>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                            <enableAssociationManagement>true</enableAssociationManagement>
                            <enableExtendedEnhancement>false</enableExtendedEnhancement>
                        </configuration>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>javax.transaction</groupId>
                        <artifactId>javax.transaction-api</artifactId>
                        <version>1.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/generated/java</source>

                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/generated/java</directory>
                            <includes>
                                <include>**/*</include>

                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/main/kotlin</source>
                                <source>src/main/java</source>
                                <source>src/main/generated/java</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
